// FSM/Datapath Test Program 1:  Register to Register, FSMForRegFileTest commands mirror

 
// 0:  0101 - add immediate 0000 - register 0 - value 1
// 16'b0101_0000_0000_0001;
5001
// 1:  Add immediate (1) into r1
// 16'b0101_0001_0000_0001
5101
// 2:  r1 = r0 + r1
// 16'b0000_0001_0101_0000;
0150
// 3:  Move r1 -> r2
// 16'b0000_0010_1101_0001;
02D1
// 4:  r2 = r0 + r2
// 16'b0000_0010_0101_0000;
0250
// 5:  Move r2 -> r3
// 16'b0000_0011_1101_0010;
03D2
// 6:  r3 = r1 + r3
// 16'b0000_0011_0101_0001;
0351
// 7:  Move r3 -> r4
// 16'b0000_0100_1101_0011;
04D3
// 8:  r4 = r4 + r2
// 16'b0000_0100_0101_0010;
0452
// 9:  Move r4 -> 45
// 16'b0000_0101_1101_0100;
05D4
// 10:  r5 = r3 + r5
// 16'b0000_0101_0101_0011;
0553
// 11:  Move r5 -> r6
// 16'b0000_0110_1101_0101;
06D5
// 12:  r6 = r6 + r4
// 16'b0000_0110_0101_0100;
0654
// 13:  Move r6 -> r7
// 16'b0000_0111_1101_0110;
07D6
// 14:  r7 = r5 + r7
// 16'b0000_0111_0101_0101;
0755
// 15:  Move r7 -> r8
// 16'b0000_1000_1101_0111;
08D7
// 16:  r8 = r6 + r8
// r6_8add = 16'b0000_1000_0101_0110;
0856
// 17:  Move r8 -> r9
// 16'b0000_1001_1101_1000;
09D8
// 18:  r9 = r7 + r9
// 16'b0000_1001_0101_0111;
0957
// 19:  Move r9 -> r10
// 16'b0000_1010_1101_1001;
0AD9
// 20:  r10 = r8 + r10
// 16'b0000_1010_0101_1000;
0A58
// 21:  Move r10 -> r11
// 16'b0000_1011_1101_1010;
0BDA
// 22:  r11 = r9 + r11
// 16'b0000_1011_0101_1001;
0B59
// 23:  Move r11 -> r12
// 16'b0000_1100_1101_1011;
0CDB
// 24:  r12 = r10 + r12
// 16'b0000_1100_0101_1010;
0C5A
// 25:  Move r12 -> r13
// 16'b0000_1101_1101_1100;
0DDC
// 26:  r13 = r11 + r13
// 16'b0000_1101_0101_1011;
0D5B
// 27:  Move r13 -> r14
// 16'b0000_1110_1101_1101;
0EDD
// 28:  r14 = r12 + r14
// 16'b0000_1110_0101_1100;
0E5C
// 29:  Move r14 -> r15
// 16'b0000_1111_1101_1110;
0FDE
// 30:  r15 = r13 + r15
// 16'b0000_1111_0101_1101;
0F5D

// Result should be:  r15 = D'1597 or 0x63D
 