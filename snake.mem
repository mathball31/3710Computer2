de00
fe10
4ece
//void set_glyph(r6(dir), r7(glyph_ptr), r8(glyph_byte), r9(glyph_num))
@100
470a
//head_word is in r10
dbFF
0b1a
//low_byte is in r11
de00
feff
0c1a
//high_byte is in r12
8606
0659
//r6 has glyph
b800
de10
fe01
41ce
065c
de12
fe01
4ece
8608
065b
//r6 has glyph_word
4746
//return
4ecf
//r6(2_bit_dir) 4bit_to_2bit(r6(4_bit_dir))
@200
b601
de08
fe02
41ce
d600
de1d
fe02
4ece
b602
de10
fe02
41ce
d601
de1d
fe02
4ece
b604
de18
fe02
41ce
d610
de1d
fe02
4ece
b608
de20
fe02
41ce
d611
@21d
//return
4ecf
//---------Main loop---------
@1000
40f0
//r0 has SNES_0
//-----Write Body-----
d6F0
0610
8614
//call
//r6(2_bit_dir) 4bit_to_2bit(r6(4_bit_dir))
de00
fe02
4f8e
//r6(dir) is snes_dir
deff
fe0f
0712
de00
fef0
075e
//r7(glyph_ptr) is head_ptr
de00
fe10
0812
881c
//r8(glyph_byte) is head_byte
de3e
fe00
//r9(glyph_num) is glyph.body_0
//call 
//set_glyph(r6(dir), r7(glyph_ptr), r8(glyph_byte), r9(glyph_num))
de00
fe01
4f8e
//-----End Write Body-----
@1016
//-----Update head_ptr-----
d6F0
0610
8614
//r6 has snes_dir
b601
de21
fe10
41ce
9250
de36
fe10
4ece
b602
de29
fe10
41ce
5250
de36
fe10
4ece
b604
de31
fe10
41ce
9201
de36
fe10
4ece
b608
de39
fe10
41ce
5201
//-----End Update head_ptr-----
@1036
//---------End Main Loop---------
de00
fe10
4ece
